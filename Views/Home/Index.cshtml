@* Jack Gerber - A01266976
   Date: Feb 16, 2025 *@
 
@model Tuple<BlogApp.Models.ApplicationUser, List<BlogApp.Models.Article>>

@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var user = Model?.Item1;
    var articles = Model?.Item2 ?? new List<Article>();
    ViewData["Title"] = user != null ? $"Welcome, {user.FirstName}!" : "Home Page";
}

<div class="d-flex justify-content-between align-items-center">
    <h2>@ViewData["Title"]</h2>

    <div class="d-flex justify-content-end align-items-center">
        <!-- Filter Button -->
        <button class="btn btn-secondary me-3" data-bs-toggle="modal" data-bs-target="#filterModal">Filter</button>

        @if (User.Identity.IsAuthenticated)
        {
            var currentUser = await UserManager.GetUserAsync(User);
            var userRoles = await UserManager.GetRolesAsync(currentUser);

            if (userRoles.Contains("Contributor") || userRoles.Contains("Admin"))
            {
                <!-- Create New Article Button -->
                <a href="@Url.Action("Create", "Article")" class="btn btn-primary">Create New Article</a>
            }
        }
    </div>
</div>

<!-- Filter Modal -->
<div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="filterModalLabel">Filter Articles by Date</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="get" asp-action="Index">
                    <div class="mb-3">
                        <label for="StartDate" class="form-label">Start Date</label>
                        <input type="date" class="form-control" id="StartDate" name="startDate">
                    </div>
                    <div class="mb-3">
                        <label for="EndDate" class="form-label">End Date</label>
                        <input type="date" class="form-control" id="EndDate" name="endDate">
                    </div>
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn btn-secondary me-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<div>
    <p>Here's the latest news:</p>
    @if (articles.Any())
    {
        @foreach (var article in articles)
        {
            var contributor = await UserManager.FindByNameAsync(article.ContributorUsername); // Fetch user by username

            <div class="card mb-3">
                <div class="card-body">
                    <h3 class="card-title">@article.Title</h3>
                    <p><strong>@contributor?.FirstName @contributor?.LastName</strong>, @article.CreateDate.ToString("MMMM dd, yyyy")</p>
                    <p class="card-text">
                        @(article.Body.Length > 100 ? article.Body.Substring(0, 100) + "..." : article.Body)
                    </p>
                    <a href="@Url.Action("Details", "Article", new { id = article.ArticleId })" class="btn btn-link">Read more</a>
                </div>
            </div>
        }
    }
    else
    {
        <p>No articles available.</p>
    }
</div>
